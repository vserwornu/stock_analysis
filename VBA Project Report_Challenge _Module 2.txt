Stock Analysis in VBA

Overview of Project

Purpose

Generally, the purpose of this project was to refactor the Module 2 Solution Code to loop through all data one time in order to collect the same information that was previously obtained. 
It involved using Microsoft Excel VBA code to collect stock information in the year 2017 and 2018 to inform investment decision of users of the data or make recommendations therefrom. 
Initially, the data was processed in VBA with some original codes however, a more effeecive process where existing codes could be refactored to generate/ produce 
the same results was experimented. Refactoring is a key part of the coding process where a user is not required to add new functionationality but make the coded more efficient.

Deliverables

The key deliverables for this project include two charts with stock information on 12 different stocks for 2017 and 2018, pop-up messages showing elasped run time for the refactored code and 
a Written Analysis of the key results in README.md 
The stock information contains a ticker value, the Year the stock, the opening, closing and adjusted closing price, the highest and lowest price, and the volume of the stock. 
The goal is to retrieve the ticker, the total daily volume, and the return on each stock.

Results / Analysis

Even though, not all codes I added ran successfully, I had some pop-ups that required more time to resolve. The Challenge_Start_Code resource sheet 
was used as the primary guide to add all required codes to generate tables and charts for 2018  and 2017 Stock data. 
The codes were used to create the input box, chart headers, ticker array, and to also activate the appropriate worksheets. 

In 2017, stocks with these tickers; DQ, ENPH, FSLR and SEDG provided the highest percentage returns of 199.4%, 129.5%, 101.3% and 184.5% respectively 
to investors while TERP was the only stock that had a negative percentage retuns. 

Apart from stocks with these tickers ENPH and RUN which yielded postive percentage returns of 81.9% and 84% respectively, all the others stocks listed
in this data had negative returns in 2018. It therefore seems, most of the stocks performed better in 2017 than they did in 2018.
If the underlying assets of these stcoks ate strong companies, then the negative returns could be good signal for investors to buy when the stock prices
are low and sell when they pick up in the future.

When it comes to total daily volumes,the stcoks generally recorded higher daily volumes of trade compared to 2018.
Stocks with the highest 


In 2018, the 

 All Stocks (2017)		
		
Ticker	Total Daily Volume	Return

AY		136,070,900			8.9%
CSIQ		310,592,800			33.1%
DQ		35,796,200			199.4%
ENPH		221,772,100			129.5%
FSLR		684,181,400			101.3%
HASI		80,949,300			25.8%
JKS		191,632,200			53.9%
RUN		267,681,300			5.5%
SEDG		206,885,200			184.5%
SPWR		782,187,000			23.1%
TERP		139,402,800			-7.2%
VSLR		109,487,900			50.0%


All Stocks (2018)		
		
Ticker	Total Daily Volume	Return

AY		83,079,900			-7.3%
CSIQ		200,879,900			-16.3%
DQ		107,873,900			-62.6%
ENPH		607,473,500			81.9%
FSLR		478,113,900			-39.7%
HASI		104,340,600			-20.7%
JKS		158,309,000			-60.5%
RUN		502,757,100			84.0%
SEDG		237,212,300			-7.8%
SPWR		538,024,300			-44.6%
TERP		151,434,700			-5.0%
VSLR		136,539,100			-3.5%



Summary

Advantages and Disadvantages of Refactoring Code

The key merits of Refactoring Code are ; 
-	It helps to make a code cleaner and run in more organized manner.
-	It makes the code more efficientâ€”by taking fewer steps to accomplish same or similar tasks in timely fashion.
-	It helps with a better designing and improvement of software, debugging, and faster programming. 
-	It also benefits other users who view other people's projects since it easier to readand comprehen it.
-	It also provide jobs opportunities to many young programmers 

Notwithstanding these great benefits of Refactoring, the following demerits or disadvantage discourge users from refcatoring their codes;

- 	When applications are too large a developer may not have proper test cases for the existing codes
-	It is time consuming to refactor code.

The Advantages of Refactoring VBA Script

- While the original Script was long and intense, it was easy to read the refactored script.
- the original codes took more time to run in VBA while the refactored codes ran more efficiently and in a timeous manner
- Both the original and refactored VBA scripts generate the same results.

